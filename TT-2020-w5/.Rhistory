plot.background = element_rect(colour = NA, fill = "grey45"),
plot.margin = margin(10, 40, 20, 80),
plot.caption = element_text(family = "JetBrains Mono", margin = margin(10, 0, 0, 0))
) +
myplot +
ggsave(here::here("TT-2020-w5", "plots", "sf-trees.png"), dpi = 320, width = 12.3, height = 7)
myplot
library(tidyverse)
library(osmdata)
library(sf)
library(here)
sf_trees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
streets <- sf_trees %>%
filter(latitude < 40 & latitude > 37.7) %>%
mutate(address = str_replace(address, "@", " ")) %>%
separate(address, sep = "^\\d+[Xx-]* *(- *\\d+ )*", c("number", "street"), remove = FALSE) %>%
add_count(street) %>%
filter(n > 1000)
san_francisco <- getbb("San Francisco")%>%
opq()%>%
add_osm_feature(key = "highway", value = c("residential", "living_street", "unclassified", "service", "footway")) %>%
osmdata_sf()
ggplot() +
geom_sf(data = san_francisco$osm_lines, color = "grey10", size = 0.1, alpha = 0.8) +
geom_point(data = streets, aes(longitude, latitude, color = street, size = n), size = 0.15) +
annotate("point", -122.4106, 37.7858, color = "#276DC2", size = 10) +
annotate("text", -122.4106, 37.7858, color = "white", size = 2, label = "rstudio::conf", family ="JetBrains Mono") +
scale_colour_viridis_d(guide = guide_legend(title = "Streets in San Francisco with\nthe most DPW-maintained trees", override.aes = list(size = 2))) +
coord_sf(xlim = c(-122.51, -122.34), ylim = c(37.7, 37.81)) +
labs(
caption = "Source: DataSF | Graphic: Alan Kinene"
) + theme_void(base_family = "JetBrains Mono Bold") +
theme(
legend.title = element_text(size = 13, color = "grey10"),
legend.text = element_text(size = 12, color = "grey70"),
plot.background = element_rect(colour = NA, fill = "grey45"),
plot.margin = margin(10, 40, 20, 80),
plot.caption = element_text(family = "JetBrains Mono", margin = margin(10, 0, 0, 0))
) +
ggsave(here::here("TT-2020-w5", "plots", "sf-trees.png"), dpi = 320, width = 12.3, height = 7)
ggplot() +
geom_sf(data = san_francisco$osm_lines, color = "grey10", size = 0.1, alpha = 0.8) +
geom_point(data = streets, aes(longitude, latitude, color = street, size = n), size = 0.15) +
annotate("point", -122.4106, 37.7858, color = "#276DC2", size = 10) +
annotate("text", -122.4106, 37.7858, color = "white", size = 2, label = "rstudio::conf", family ="JetBrains Mono") +
scale_colour_viridis_d(guide = guide_legend(title = "Streets in San Francisco with\nthe most DPW-maintained trees", override.aes = list(size = 2))) +
coord_sf(xlim = c(-122.51, -122.34), ylim = c(37.7, 37.81)) +
labs(
caption = "Source: DataSF | Graphic: Alan Kinene"
) + theme_void(base_family = "JetBrains Mono Bold") +
theme(
legend.title = element_text(size = 13, color = "grey10"),
legend.text = element_text(size = 12, color = "grey70"),
plot.background = element_rect(colour = NA, fill = "grey45"),
plot.margin = margin(10, 40, 20, 80),
plot.caption = element_text(family = "JetBrains Mono", margin = margin(10, 0, 0, 0))
)
ggplot() +
geom_sf(data = san_francisco$osm_lines, color = "grey10", size = 0.1, alpha = 0.8) +
geom_point(data = streets, aes(longitude, latitude, color = street, size = n), size = 0.15) +
annotate("point", -122.4106, 37.7858, color = "#276DC2", size = 10) +
annotate("text", -122.4106, 37.7858, color = "white", size = 2, label = "rstudio::conf", family ="JetBrains Mono") +
scale_colour_viridis_d(guide = guide_legend(title = "Streets in San Francisco with\nthe most DPW-maintained trees", override.aes = list(size = 2))) +
coord_sf(xlim = c(-122.51, -122.34), ylim = c(37.7, 37.81)) +
labs(
caption = "Source: DataSF | Graphic: Alan Kinene"
) + theme_void(base_family = "JetBrains Mono Bold") +
theme(
legend.title = element_text(size = 13, color = "grey10"),
legend.text = element_text(size = 12, color = "grey70"),
plot.background = element_rect(colour = NA, fill = "grey45"),
plot.margin = margin(10, 40, 20, 80),
plot.caption = element_text(family = "JetBrains Mono", margin = margin(10, 0, 0, 0))
) +
ggsave(here::here("plots", "sf-trees.png"), dpi = 320, width = 12.3, height = 7)
library(tidyverse)
relig_income
my_data <-relig_income
View(my_data)
View(my_data)
my_data <-relig_income[1:3,1:6]
colnames(my_data)<-c("age1","age2","age3","var_1", "var_2")
colnames(my_data)<-c("respondent","age1","age2","age3","var_1", "var_2")
anscombe
anscombe %>%
pivot_longer(everything(),
names_to = c(".value", "set"),
names_pattern = "(.)(.)"
)
my_data%>%
pivot_longer(everything(),
names_to = c(".value", "set"),
names_pattern = "(.)(.)"
)
my_data%>%
pivot_longer(everything())
my_data%>%
pivot_longer(everything(),
names_to = c(".value", "respondent"),
names_pattern = "(.)(.)"
)
who
my_data <-relig_income[1:3,1:6]
colnames(my_data)<-c("respondent","age1","age2","var_1", "var_2")
my_data <-relig_income[1:3,1:5]
colnames(my_data)<-c("respondent","age1","age2","var_1", "var_2")
anscombe
xx<-anscombe
View(xx)
anscombe %>%
pivot_longer(everything(),
names_to = c(".value", "set"),
names_pattern = "(.)(.)"
)
who
my_data%>%
pivot_longer(everything(),
names_to = c(".value", "respondent"),
names_pattern = c("(age)(.)", "var_?(.)")
)
my_data%>%
pivot_longer(everything(),
names_to = c(".value", "respondent"),
names_pattern = c("age(.)", "var_?(.)")
)
my_data%>%
pivot_longer(everything(),
names_to = c(".value", "respondent"),
names_pattern = "(.)(.)"
)
my_data%>%
pivot_longer(everything(),
names_to = c(".value", "respondent"),
names_pattern = c("(.)(.)","(.)(.)")
)
anscombe %>%
pivot_longer(everything(),
names_to = c(".value", "set"),
names_pattern = "(.)(.)"
)
anscombe
my_data <-relig_income[1:3,1:5]
colnames(my_data)<-c("respondent","age1","age2","var1", "var2")
my_data%>%
pivot_longer(everything(),
names_to = c(".value", "respondent"),
names_pattern = "(.)(.)"
)
my_data%>%
pivot_longer(everything(),
names_to = c(".value", "set"),
names_pattern = "(.)(.)"
)
pivot_longer(mydata, c(age1:var2),
names_to = c(".value", "wave"),
names_pattern = "(.+)(.+)"
)
my_data%>%
pivot_longer(c(age1:var2),
names_to = c(".value", "respondent"),
names_pattern = "(.)(.)"
)
my_data%>%
pivot_longer(c("age1","age2","var1", "var2"),
names_to = c(".value", "respondent"),
names_pattern = "(.)(.)"
)
my_data <-relig_income[1:3,1:5]
colnames(my_data)<-c("respondent","age1","age2","var1", "var2")
my_data%>%
pivot_longer(c("age1","age2","var1", "var2"),
names_to = c(".value", "respondent"),
names_pattern = "(.)(.)"
)
my_data%>%
pivot_longer(c("age1","age2","var1", "var2"),
names_to = c(".value", "respondent"),
names_pattern = "(.+)(.+)"
)
pivot_longer(my_data, c(age1:var2),
names_to = c(".value", "wave"),
names_pattern = "(.+)(.+)"
)
my_data <-relig_income[1:3,1:5]
colnames(my_data)<-c("respondent","age1","age2","var_1", "var_2")
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.+)(_.+)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.+)(.+)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.)(.)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.+)(.)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(._+)(.)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(._)(.)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.+)(.+)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.*)(.+)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.?)(.+)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.?_)(.+)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(._)(.+)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.?)(.+)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.?+Â´)(.+)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.?+)(.+)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.+?)(.+)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.+)?(.+)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.+)*(.+)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.+)(.+)"
)
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(?+)(.+)"
)
#https://tidyr.tidyverse.org/reference/pivot_longer.html
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(?.)(.+)"
)
#https://tidyr.tidyverse.org/reference/pivot_longer.html
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.)(.+)"
)
#https://tidyr.tidyverse.org/reference/pivot_longer.html
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(+)(.+)"
)
#https://tidyr.tidyverse.org/reference/pivot_longer.html
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.+)(.+)"
)
#https://tidyr.tidyverse.org/reference/pivot_longer.html
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.?|_+)(.+)"
)
#https://tidyr.tidyverse.org/reference/pivot_longer.html
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.?|_)(.+)"
)
#https://tidyr.tidyverse.org/reference/pivot_longer.html
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.+)(_|.+)"
)
#https://tidyr.tidyverse.org/reference/pivot_longer.html
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(._+)(_|.+)"
)
#https://tidyr.tidyverse.org/reference/pivot_longer.html
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(._)(_|.+)"
)
#https://tidyr.tidyverse.org/reference/pivot_longer.html
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.+)(_|.+)"
)
#https://tidyr.tidyverse.org/reference/pivot_longer.html
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.+)?_(.+)"
)
#https://tidyr.tidyverse.org/reference/pivot_longer.html
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.+)_(.+)"
)
#https://tidyr.tidyverse.org/reference/pivot_longer.html
pivot_longer(my_data, c("age1","age2","var_1", "var_2"),
names_to = c(".value", "wave"),
names_pattern = "(.+)?_(.+)",
values_drop_na = TRUE
)
my_data <-relig_income[1:3,1:7]
#https://tidyr.tidyverse.org/reference/pivot_longer.html
pivot_longer(my_data, c("age1","age2","age3","var_1", "var_2", "var_3"),
names_to = c(".value", "wave"),
names_pattern = "(.+)?_(.+)",
values_drop_na = TRUE
)
my_data <-relig_income[1:3,1:7]
colnames(my_data)<-c("respondent","age1","age2","age3","var_1", "var_2", "var_3")
#https://tidyr.tidyverse.org/reference/pivot_longer.html
pivot_longer(my_data, c("age1","age2","age3","var_1", "var_2", "var_3"),
names_to = c(".value", "wave"),
names_pattern = "(.+)?_(.+)",
values_drop_na = TRUE
)
my_data <-relig_income[1:3,1:7]
colnames(my_data)<-c("respondent","age1","age2","age3","var_1", "var_2", "var_3")
colnames(my_data)<-c("respondent","age_1","age_2","age_3","var_1", "var_2", "var_3")
my_data_long <- reshape(my_data,
varying = c("age_1","age_2","age_3","var_1", "var_2", "var_3"),
direction = "long",
idvar = "respondent")
my_data_long <- reshape(my_data,
varying = list("age_1","age_2","age_3","var_1", "var_2", "var_3"),
direction = "long",
idvar = "respondent")
my_data_long <- reshape(my_data,
varying = list(age_1:var_3),
direction = "long",
idvar = "respondent")
my_data_long <- reshape(my_data,
varying = list("age_1","age_2","age_3","var_1", "var_2", "var_3"),
direction = "long",
idvar = "respondent")
reshape(my_data, direction = "long", varying = 2:7, sep = "_")
reshape(my_data, direction = "long", varying = 2:7, sep = "_",idvar = "respondent")
trial_data <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
View(trial_data)
#filter function
streets <- trial_data %>%
filter(latitude < 40 & latitude > 37.7)
View(streets)
streets <- trial_data %>%
filter(latitude < 40 & latitude > 37.7)%>%
mutate(address = str_replace(address, "@", " "))
#filter function
streets <- trial_data %>%
filter(latitude < 40 & latitude > 37.7)%>%
mutate(address = str_replace(address, "@", " "))%>%
separate(address, sep = "^\\d+[Xx-]* *(- *\\d+ )*", c("number", "street"), remove = FALSE)
#filter function
streets <- trial_data %>%
filter(latitude < 40 & latitude > 37.7)%>%
mutate(address = str_replace(address, "@", " "))%>%
separate(address, sep = "^\\d+[Xx-]* *(- *\\d+ )*", c("number", "street"), remove = T)
#filter function
streets <- trial_data %>%
filter(latitude < 40 & latitude > 37.7)%>%
mutate(address = str_replace(address, "@", " "))%>%
separate(address, sep = "^\\d+[Xx-]* *(- *\\d+ )*", c("number", "street"), remove = FALSE)
#filter function
streets <- trial_data %>%
filter(latitude < 40 & latitude > 37.7)%>%
mutate(address = str_replace(address, "@", " "))%>%
separate(address, sep = " ", c("number", "street"), remove = FALSE)
streets <- trial_data %>%
filter(latitude < 40 & latitude > 37.7)%>%
mutate(address = str_replace(address, "@", " "))%>%
separate(address, sep = "^\\d+[Xx-]* *(- *\\d+ )*", c("number", "street"), remove = FALSE)%>%
add_count(street)
streets <- trial_data %>%
filter(latitude < 40 & latitude > 37.7)%>%
mutate(address = str_replace(address, "@", " "))%>%
separate(address, sep = "^\\d+[Xx-]* *(- *\\d+ )*", c("number", "street"), remove = FALSE)%>%
add_count(street) %>%
filter(n > 1000)
#mapping function
kampala <- getbb("San Francisco")
#mapping function
library(osmdata)
kampala <- getbb("Kampala")
sf:::plot.sf(kampala)
kampala <- getbb("Kampala")%>%
opq()%>%
add_osm_feature(key = "highway", value = c("residential", "living_street", "unclassified", "service", "footway")) %>%
osmdata_sf()
sf:::plot.sf(kampala)
plot(nc)
plot(kampala)
plot.sf(kampala)
ggplot() +
geom_sf(data = kampala$osm_lines, color = "grey10", size = 0.1, alpha = 0.8)
ggplot() +
geom_sf(data = kampala$osm_lines, color = "grey10", size = 0.1, alpha = 0.8) +
geom_point(data = streets, aes(longitude, latitude, color = street, size = n), size = 0.15)
san_francisco <- getbb("San Francisco")%>%
opq()%>%
add_osm_feature(key = "highway", value = c("residential", "living_street", "unclassified", "service", "footway")) %>%
osmdata_sf()
ggplot() +
geom_sf(data = san_francisco$osm_lines, color = "grey10", size = 0.1, alpha = 0.8) +
geom_point(data = streets, aes(longitude, latitude, color = street, size = n), size = 0.15)
ggplot() +
geom_sf(data = san_francisco$osm_lines, color = "grey10", size = 0.1, alpha = 0.8)
ggplot() +
geom_sf(data = san_francisco$osm_lines, color = "grey10", size = 0.1, alpha = 0.8) +
geom_point(data = streets, aes(longitude, latitude, color = street, size = n), size = 0.15)+
scale_colour_viridis_d(guide = guide_legend(title = "Streets in San Francisco with\nthe most DPW-maintained trees", override.aes = list(size = 2))) +
coord_sf(xlim = c(-122.51, -122.34), ylim = c(37.7, 37.81))
ggplot() +
geom_sf(data = san_francisco$osm_lines, color = "grey10", size = 0.1, alpha = 0.8) +
geom_point(data = streets, aes(longitude, latitude, color = street, size = n), size = 0.15)+
scale_colour_viridis_d(guide = guide_legend(title = "Streets in San Francisco with\nthe most DPW-maintained trees", override.aes = list(size = 2))) +
coord_sf(xlim = c(-122.51, -122.34), ylim = c(37.7, 37.81))+
labs(
caption = "Source: DataSF | Graphic: Alan Kinene"
)
ggplot() +
geom_sf(data = san_francisco$osm_lines, color = "grey10", size = 0.1, alpha = 0.8) +
geom_point(data = streets, aes(longitude, latitude, color = street, size = n), size = 0.15)+
scale_colour_viridis_d(guide = guide_legend(title = "Streets in San Francisco with\nthe most DPW-maintained trees", override.aes = list(size = 2))) +
coord_sf(xlim = c(-122.51, -122.34), ylim = c(37.7, 37.81))+
labs(
caption = "Source: DataSF | Graphic: Alan Kinene"
)+ theme_void(base_family = "JetBrains Mono Bold")
ggplot() +
geom_sf(data = san_francisco$osm_lines, color = "grey10", size = 0.1, alpha = 0.8) +
geom_point(data = streets, aes(longitude, latitude, color = street, size = n), size = 0.15)+
scale_colour_viridis_d(guide = guide_legend(title = "Streets in San Francisco with\nthe most DPW-maintained trees", override.aes = list(size = 2))) +
coord_sf(xlim = c(-122.51, -122.34), ylim = c(37.7, 37.81))+
labs(
caption = "Source: DataSF | Graphic: Alan Kinene"
)+ theme_void(base_family = "JetBrains Mono Bold")+
theme(
legend.title = element_text(size = 13, color = "grey10"),
legend.text = element_text(size = 12, color = "grey70"),
plot.background = element_rect(colour = NA, fill = "grey45"),
plot.margin = margin(10, 40, 20, 80),
plot.caption = element_text(family = "JetBrains Mono", margin = margin(10, 0, 0, 0))
)
ggplot() +
geom_sf(data = san_francisco$osm_lines, color = "grey10", size = 0.1, alpha = 0.8) +
geom_point(data = streets, aes(longitude, latitude, color = street, size = n), size = 0.15)+
scale_colour_viridis_d(guide = guide_legend(title = "Streets in San Francisco with\nthe most DPW-maintained trees", override.aes = list(size = 2))) +
coord_sf(xlim = c(-122.51, -122.34), ylim = c(37.7, 37.81))+
labs(
caption = "Source: DataSF | Graphic: Alan Kinene"
)
ggplot() +
geom_sf(data = san_francisco$osm_lines, color = "grey10", size = 0.1, alpha = 0.8) +
geom_point(data = streets, aes(longitude, latitude, color = street, size = n), size = 0.15)+
scale_colour_viridis_d(guide = guide_legend(title = "Streets in San Francisco with\nthe most DPW-maintained trees", override.aes = list(size = 2))) +
coord_sf(xlim = c(-122.51, -122.34), ylim = c(37.7, 37.81))+
labs(
caption = "Source: DataSF | Graphic: Alan Kinene"
)+ theme_void(base_family = "JetBrains Mono Bold")
ggplot() +
geom_sf(data = san_francisco$osm_lines, color = "grey10", size = 0.1, alpha = 0.8) +
geom_point(data = streets, aes(longitude, latitude, color = street, size = n), size = 0.15)+
scale_colour_viridis_d(guide = guide_legend(title = "Streets in San Francisco with\nthe most DPW-maintained trees", override.aes = list(size = 2))) +
coord_sf(xlim = c(-122.51, -122.34), ylim = c(37.7, 37.81))+
labs(
caption = "Source: DataSF | Graphic: Alan Kinene"
)+ theme_void(base_family = "JetBrains Mono Bold")+
theme(
legend.title = element_text(size = 13, color = "grey10"),
legend.text = element_text(size = 12, color = "grey70"),
plot.background = element_rect(colour = NA, fill = "grey45"),
plot.margin = margin(10, 40, 20, 80),
plot.caption = element_text(family = "JetBrains Mono", margin = margin(10, 0, 0, 0))
)
type(2l)
type(2L)
rownames()
rownames
150000*8
200000*8*12
10.51/37.20
38.66/41.53
38.66/41.53
10.51/37.20
38.66/41.53
55.48/1712.00
292140/sqrt(6)
189540/sqrt(4)
